<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="../public/dragdrop.css" />
    <title>AJAX Uploader</title>
  </head>

  <body>
    <%- include('header') %>
    <main>
      <section class="drop-zone-container">
        <article class="drop-zone"></article>
        <span> Drag and drop your files here </span>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          height="24px"
          viewBox="0 0 24 24"
          width="24px"
          fill="var( --primary-color)"
        >
          <path d="M0 0h24v24H0V0z" fill="none" />
          <path
            d="M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM19 18H6c-2.21 0-4-1.79-4-4 0-2.05 1.53-3.76 3.56-3.97l1.07-.11.5-.95C8.08 7.14 9.94 6 12 6c2.62 0 4.88 1.86 5.39 4.43l.3 1.5 1.53.11c1.56.1 2.78 1.41 2.78 2.96 0 1.65-1.35 3-3 3zM8 13h2.55v3h2.9v-3H16l-4-4z"
          />
        </svg>
      </section>
    </main>

    <script>
      const d = document,
        $main = d.querySelector("main"),
        $files = d.getElementById("files"),
        $dropZone = d.querySelector(".drop-zone");

      async function uploader(file) {
        const formData = new FormData();
        formData.append("file", file);

        const res = await fetch("http://localhost:3000/upload", {
          method: "POST",
          body: formData,
        });
        console.log(await res.json());
      }

      function progressUpload(file) {
        const $progress = d.createElement("progress"),
          $span = d.createElement("span");

        $progress.value = 0;
        $progress.max = 100;

        $main.insertAdjacentElement("beforeend", $progress);
        $main.insertAdjacentElement("beforeend", $span);

        const fileReader = new FileReader();
        fileReader.readAsDataURL(file);

        fileReader.addEventListener("progress", (e) => {
          let progress = parseInt((e.loaded / e.total) * 100);
          $progress.value = progress;
          $span.innerHTML = `${file.name} <b>${progress}%</b>`;
        });
        fileReader.addEventListener("loadend", (e) => {
          uploader(file);
          setTimeout(() => {
            $main.removeChild($progress);
            $main.removeChild($span);
          }, 10000);
        });
      }

      d.addEventListener("change", (e) => {
        if (e.target === $files) {
          const files = Array.from(e.target.files);
          files.forEach((file) => progressUpload(file));
        }
      });

      $dropZone.addEventListener("dragover", (e) => {
        e.preventDefault();
        e.stopPropagation();
        $dropZone.classList.add("is-active");
      });

      $dropZone.addEventListener("dragleave", (e) => {
        e.preventDefault();
        e.stopPropagation();
        $dropZone.classList.remove("is-active");
      });

      $dropZone.addEventListener("drop", (e) => {
        e.preventDefault();
        e.stopPropagation();
        $dropZone.classList.remove("is-active");
        const files = Array.from(e.dataTransfer.files);
        files.forEach((file) => progressUpload(file));
      });
    </script>
  </body>
</html>
